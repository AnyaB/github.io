Peace Education Study Questionaire
========================================================

Read in the master list of research
```{r}
Master <- read.csv("MasterList.csv", colClasses = "character")
```

Assign the column for school name
```{r}
school <- Master[ , "NAME.OF.YOUR.SCHOOL"]
```

Assign the columns for question numbers
```{r}
Q2 <- as.numeric(Master[, "Age"])
```

Create a data frame from the master list of research
```{r}
MasterFrame <- data.frame(school, Q2)
```

collect responses by school                                     
```{r}
DHS <- MasterFrame[MasterFrame$school == "DHS", ]
HHS <- MasterFrame[MasterFrame$school == "HHS", ]
LHS <- MasterFrame[MasterFrame$school == "LHS", ]
CHS <- MasterFrame[MasterFrame$school == "CHS" | MasterFrame$school == "CHS_analyst_modified" , ]
```

Combine schools into groups
```{r}
DHSHHS <- MasterFrame[MasterFrame$school == "DHS" | MasterFrame$school == "HHS", ]
DHSHHSLHS <- MasterFrame[MasterFrame$school == "DHS" | MasterFrame$school == "HHS" | MasterFrame$school == "LHS", ]
```

Create output data frame as format example; empty except for column and row names
```{r}
formatout <- read.csv("formatout.csv", colClasses = "character")
Questions <- formatout$questions
DHSHHSnum <- as.numeric(formatout$DHSHHSnum[1:length(formatout$questions)])
DHSHHSper <- as.numeric(formatout$DHSHHSper[1:length(formatout$questions)])
LHSnum <- as.numeric(formatout$LHSnum[1:length(formatout$questions)])
LHSper <- as.numeric(formatout$LHSper[1:length(formatout$questions)])
DHSHHSLHSnum <- as.numeric(formatout$DHSHHSLHSnum[1:length(formatout$questions)])
DHSHHSLHSper <- as.numeric(formatout$DHSHHSLHSper[1:length(formatout$questions)])
CHSnum <- as.numeric(formatout$CHSnum[1:length(formatout$questions)])
CHSper <- as.numeric(formatout$CHSper[1:length(formatout$questions)])

out <- data.frame(Questions, DHSHHSnum, DHSHHSper, LHSnum, LHSper, DHSHHSLHSnum, DHSHHSLHSper, CHSnum, CHSper)
```

Set row counter & digits.
Set Quality Control variable.
```{r}
currentRow <- 0
options(digits = 1)
quality <- TRUE
```


Q2 age. Here we create sch.
sch is a dataframe subset of our working dataframe (MasterFrame) for that school. It has columns school and Q2 Age. 
We want to count the number (num) and percentage (per) of students of each age at each school. 
```{r}
currentRow <- currentRow + 2
for (n in 1:4) {
  if (n == 1) sch <- DHSHHS
  if (n == 2) sch <- LHS
  if (n == 3) sch <- DHSHHSLHS
  if (n == 4) sch <- CHS

a <- sum(sch$Q2 == 13, na.rm = TRUE)
b <- sum(sch$Q2 == 14, na.rm = TRUE)
c <- sum(sch$Q2 == 15, na.rm = TRUE)
d <- sum(sch$Q2 == 16, na.rm = TRUE)
e <- sum(sch$Q2 == 17, na.rm = TRUE)
f <- sum(sch$Q2 == 18, na.rm = TRUE)
g <- sum(sch$Q2 == 19, na.rm = TRUE)
h <- sum(sch$Q2 == 20, na.rm= TRUE)
i <- sum(is.na(sch$Q2) | sch$Q2 == "")
j <- nrow(sch)
  
aper <- 100*a/j
bper <- 100*b/j
cper <- 100*c/j
dper <- 100*d/j
eper <- 100*e/j
fper <- 100*f/j
gper <- 100*g/j
hper <- 100*h/j
iper <- 100*i/j

  if (n == 1) {out$DHSHHSnum[currentRow:(currentRow+8)] <- c(a,b,c,d,e,f,g,h,i)
               out$DHSHHSper[currentRow:(currentRow+8)] <- c(aper, bper, cper, dper, eper, fper, gper, hper, iper)}
  if (n == 2) {out$LHSnum[currentRow:(currentRow+8)] <- c(a,b,c,d,e,f,g,h,i)
               out$LHSper[currentRow:(currentRow+8)] <- c(aper, bper, cper, dper, eper, fper, gper,hper, iper)}
  if (n == 3) {out$DHSHHSLHSnum[currentRow:(currentRow+8)] <- c(a,b,c,d,e,f,g,h,i)
               out$DHSHHSLHSper[currentRow:(currentRow+8)] <- c(aper, bper, cper, dper, eper, fper, gper, hper, iper)}
  if (n == 4) {out$CHSnum[currentRow:(currentRow+8)] <- c(a,b,c,d,e,f,g,h,i)
               out$CHSper[currentRow:(currentRow+8)] <- c(aper, bper, cper, dper, eper, fper, gper,hper,iper)}
  
  if((aper+bper+cper+dper+eper+fper+gper+hper+iper) > 98.5 & (aper+bper+cper+dper+eper+fper+gper+hper+iper) < 101.5) {
  quality <- TRUE
  } else (quality <- FALSE)
print(quality)
  
}
currentRow <- currentRow + 8
```

Delete the NA values...something like this: 
```{r}
colCounter <- c()
outUse <- out
outRmNA <- data.frame(cbind(Question=rep("",times=currentRow), DHSHHSnum=rep("", times=currentRow), DHSHHSper=rep("", times=currentRow), LHSnum=rep("", times=currentRow), LHSper=rep("", times=currentRow), DHSHHSLHSnum=rep("", times=currentRow), DHSHHSLHSper=rep("", times=currentRow),CHSnum=rep("", times=currentRow), CHSper=rep("", times=currentRow)))
for (i in 1:ncol(out)) {
colCounter <- is.na(out[,i])
outRmNA[,i] <- replace(outUse[,i], colCounter, "")
}
```

Create the output table
```{r}
write.table(format(out, digits = 0, justify = c("centre")), file = "subsetEx.csv", sep = ",", row.names = FALSE)

write.table(format(outRmNA, digits = 0, justify = c("centre")), file = "subsetExRmNAV4.csv", sep=",", row.names = FALSE)
```

Let's try plotting this in plot.ly
https://plot.ly/~AnyaB/4
